>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg.integer_validator("invalid number", "number")
Traceback (most recent call last):
NameError: name 'bg' is not defined

>>> bg.integer_validator("another invalid", True)
Traceback (most recent call last):
NameError: name 'bg' is not defined

>>> bg.integer_validator("invalid tuple", (1,))
Traceback (most recent call last):
NameError: name 'bg' is not defined

>>> bg.integer_validator("and another", [3])
Traceback (most recent call last):
NameError: name 'bg' is not defined

>>> bg.integer_validator("more invalid testing", {3, 4})
Traceback (most recent call last):
NameError: name 'bg' is not defined

>>> bg.integer_validator("absolutely every possible invalid", None)
Traceback (most recent call last):
NameError: name 'bg' is not defined

And if ``value`` is an integer, but less than or equal to zero, a ValueError
is raised.

>>> bg.integer_validator("invalid int", -1)
Traceback (most recent call last):
NameError: name 'bg' is not defined

>>> bg.integer_validator("invalid int", 0)
Traceback (most recent call last):
NameError: name 'bg' is not defined